// API endpoint –¥–ª—è –ø—Ä–∏–µ–º–∞ –ª–æ–≥–æ–≤
export default function handler(req, res) {
  // CORS –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –ª—é–±–æ–≥–æ –¥–æ–º–µ–Ω–∞
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  if (req.method === 'POST') {
    try {
      const { message, timestamp, url, userAgent, level } = req.body;
      
      // –í—ã–≤–æ–¥–∏–º –ª–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å Vercel (–±—É–¥–µ—Ç –≤–∏–¥–Ω–æ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ)
      console.log(`[${timestamp}] [${level}] ${message}`);
      if (url) console.log(`üìç URL: ${url}`);
      if (userAgent) console.log(`üåê User Agent: ${userAgent}`);
      console.log('‚îÄ'.repeat(80));
      
      res.status(200).json({ success: true });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–æ–≥–∞:', error);
      res.status(400).json({ error: 'Invalid request' });
    }
  } else {
    res.status(405).json({ error: 'Method not allowed' });
  }
}
